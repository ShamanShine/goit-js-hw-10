{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Ожидаем полной загрузки документа перед началом манипуляций с DOM\n  const form = document.querySelector('.form');\n  // Добавляем слушатель события submit на форму\n  form.addEventListener('submit', function (event) {\n    // Предотвращаем стандартное поведение формы (отправку данных и перезагрузку страницы)\n    event.preventDefault();\n\n    // Получаем значение задержки в миллисекундах из поля ввода\n    const delayValue = parseInt(\n      this.querySelector('input[name=\"delay\"]').value,\n      10\n    );\n\n    // Получаем выбранный статус (fulfilled или rejected) из радиокнопок\n    const stateValue = this.querySelector('input[name=\"state\"]:checked').value;\n\n    // Создаем новый промис\n    const promise = new Promise((resolve, reject) => {\n      // Имитируем асинхронную задачу с использованием setTimeout\n      setTimeout(() => {\n        // Вызываем resolve или reject после указанной задержки\n        if (stateValue === 'fulfilled') {\n          resolve(delayValue);\n        } else {\n          reject(delayValue);\n        }\n      }, delayValue);\n    });\n\n    // Обрабатываем результаты промиса\n    promise.then(\n      delay => {\n        // Если промис выполнился успешно, выводим сообщение об успехе\n        iziToast.success({\n          title: 'Fulfilled promise',\n          message: `✅ Fulfilled promise in ${delay}ms`,\n          position: 'topCenter',\n        });\n      },\n      delay => {\n        // Если промис был отклонен, выводим сообщение об отклонении\n        iziToast.error({\n          title: 'Rejected promise',\n          message: `❌ Rejected promise in ${delay}ms`,\n          position: 'topCenter',\n        });\n      }\n    );\n  });\n});\n"],"names":["event","delayValue","stateValue","resolve","reject","delay","iziToast"],"mappings":"oGAKA,SAAS,iBAAiB,mBAAoB,IAAM,CAErC,SAAS,cAAc,OAAO,EAEtC,iBAAiB,SAAU,SAAUA,EAAO,CAE/CA,EAAM,eAAc,EAGpB,MAAMC,EAAa,SACjB,KAAK,cAAc,qBAAqB,EAAE,MAC1C,EACN,EAGUC,EAAa,KAAK,cAAc,6BAA6B,EAAE,MAGrD,IAAI,QAAQ,CAACC,EAASC,IAAW,CAE/C,WAAW,IAAM,CAEXF,IAAe,YACjBC,EAAQF,CAAU,EAElBG,EAAOH,CAAU,CAEpB,EAAEA,CAAU,CACnB,CAAK,EAGO,KACNI,GAAS,CAEPC,EAAS,QAAQ,CACf,MAAO,oBACP,QAAS,0BAA0BD,CAAK,KACxC,SAAU,WACpB,CAAS,CACF,EACDA,GAAS,CAEPC,EAAS,MAAM,CACb,MAAO,mBACP,QAAS,yBAAyBD,CAAK,KACvC,SAAU,WACpB,CAAS,CACF,CACP,CACA,CAAG,CACH,CAAC"}